rules = [
    Disable
    NoInfer
    DisableSyntax # Reports an error for disabled features such as var or XML literals.
    RemoveUnused
    LeakingImplicitClassVal # Adds 'private' to val parameters of implicit value classes
    NoValInForComprehension # Removes deprecated val inside for-comprehension binders
    ProcedureSyntax # Replaces deprecated procedure syntax with explicit ': Unit ='
    NoAutoTupling
    MissingFinal # Mark case classes as final
]

# https://nrinaudo.github.io/scala-best-practices
DisableSyntax {
    noAsInstanceOf = true
    noFinalize = true
    noFinalVal = true # https://github.com/sbt/zinc/issues/227
    noImplicitObject = true
    noIsInstanceOf = true
    noNulls = true
    noReturns = true
    noSemicolons = true
    noValInAbstract = true
    noValPatterns = true
    noVars = true
    noWhileLoops = true
    noXml = true
}

Disable.symbols = [
    "scala.Enumeration"
    
    "scala.util.Either.LeftProjection.get"
    "scala.util.Either.RightProjection.get"
    
    "scala.Option.get"
    "scala.Some.get"
    "scala.None.get"
    
    "scala.util.Try.get"
    "scala.util.Failure.get"
    "scala.util.Success.get"
]


Disable.ifSynthetic = [
    "scala.Predef.any2stringadd"
    "scala.Any"
]

NoInfer.disabledTypes = [
    "scala.Serializable"
    "scala.Product"
]
